name: Publish Python 🐍 distributions 📦

on:
  workflow_call:
    inputs:
      publish_testpypi:
        type: boolean
        default: false
        description: Publish to TestPyPI
      publish_pypi:
        type: boolean
        default: false
        description: Publish to PyPI
      publish_gh_release:
        type: boolean
        default: true
        description: Publish to GitHub Release
      use_changelog:
        type: boolean
        default: true
        description: Extract release notes from CHANGELOG.md
      changelog_file:
        type: string
        default: CHANGELOG.md
        description: Path to changelog file
        required: false
      release_tag:
        type: string
        description: Tag to package (empty for latest tag)
        required: false
      package_dir:
        type: string
        default: .
        description: Directory where the Python package is located
    secrets:
      TEST_PYPI_API_TOKEN:
        required: true
      PYPI_API_TOKEN:
        required: true

jobs:
  build:
    name: Build distribution 📦
    runs-on: ubuntu-latest
    outputs:
      release_tag: ${{ steps.set_release_tag.outputs.tag }}

    steps:
    - name: Check if all checkboxes are unchecked
      id: check_checkboxes
      run: |
        if [[ ${{ inputs.publish_testpypi }} == false && ${{ inputs.publish_pypi }} == false && ${{ inputs.publish_gh_release }} == false ]]; then
          echo "All checkboxes are unchecked. Exiting workflow."
          exit 1
        fi
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Fetch all tags
      run: |
        git fetch --prune --unshallow --tags
    - name: Verify and set release tag
      id: set_release_tag
      run: |
        release_tag=${{ inputs.release_tag }}
        if [ -z "$release_tag" ]; then
          echo "Input tag is empty. Fetching latest tag."
          release_tag=$(git describe --tags $(git rev-list --tags --max-count=1))
          if [ -z "$release_tag" ]; then
            echo "No latest tag available. Exiting workflow."
            exit 1
          fi
        else
          if ! git rev-parse -q --verify "refs/tags/$release_tag" >/dev/null; then
            echo "Invalid tag '$release_tag'. Exiting workflow."
            exit 1
          fi
        fi
        echo "tag=$release_tag" >> $GITHUB_OUTPUT
    - name: Checkout to latest tag
      run: git checkout ${{ steps.set_release_tag.outputs.tag }}
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - name: Install pypa/build
      working-directory: ${{ inputs.package_dir }}
      run: >-
        python3 -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      working-directory: ${{ inputs.package_dir }}
      run: python3 -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: ${{ inputs.package_dir }}/dist/
    - name: Store the changelog file
      if: ${{ inputs.use_changelog }}
      uses: actions/upload-artifact@v4
      with:
        name: changelog
        path: ${{ inputs.changelog_file }}

  publish-to-testpypi:
    name: Publish Python 🐍 distribution 📦 to TestPyPI
    if: ${{ inputs.publish_testpypi }}
    needs:
    - build
    runs-on: ubuntu-latest

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution 📦 to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/

  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    if: ${{ inputs.publish_pypi }}
    needs:
    - build
    runs-on: ubuntu-latest

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}

  github-release:
    name: >-
      Sign the Python 🐍 distribution 📦 with Sigstore
      and upload them to GitHub Release
    if: ${{ inputs.publish_gh_release }}
    needs:
    - build
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v3.0.0
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Get repository name
      id: get_repo_name
      run: |
        repo_full_name=${{ github.repository }}
        repo_name=${repo_full_name#*/}
        echo "name=$repo_name" >> $GITHUB_OUTPUT
    - name: Download the changelog file
      if: ${{ inputs.use_changelog }}
      uses: actions/download-artifact@v4
      with:
        name: changelog
    - name: Extract release notes
      if: ${{ inputs.use_changelog }}
      id: extract-release-notes
      uses: ffurrer2/extract-release-notes@v2
      with:
        changelog_file: ${{ inputs.changelog_file }}
    - name: Create GitHub Release 📦
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/**
        tag_name: ${{ needs.build.outputs.release_tag }}
        name: ${{ steps.get_repo_name.outputs.name }} ${{ needs.build.outputs.release_tag }}
        body: |
          Release ${{ steps.get_repo_name.outputs.name }} ${{ needs.build.outputs.release_tag }}.

          ${{ steps.extract-release-notes.outputs.release_notes }}
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
